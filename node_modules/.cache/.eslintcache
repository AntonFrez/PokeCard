[{"C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\index.js":"1","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\App.js":"2","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Button.js":"3","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Card.js":"4","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Icons.js":"5"},{"size":154,"mtime":1674126105123,"results":"6","hashOfConfig":"7"},{"size":393,"mtime":1675685559348,"results":"8","hashOfConfig":"7"},{"size":3596,"mtime":1675430249654,"results":"9","hashOfConfig":"7"},{"size":5526,"mtime":1675677226558,"results":"10","hashOfConfig":"7"},{"size":1936,"mtime":1674136020431,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"th38ir",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\index.js",[],[],"C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\App.js",[],[],"C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Button.js",["30"],[],"import React, { useState } from 'react'\r\nimport './Button.css'\r\nimport Card from './Card'\r\n\r\nimport BugType from '../image/BugType.png'\r\nimport DarkType from '../image/DarkType.png'\r\nimport DragonType from '../image/DragonType.png'\r\nimport ElectricType from '../image/ElectricType.png'\r\nimport FairyType from '../image/FairyType.png'\r\nimport FightingType from '../image/FightingType.png'\r\nimport FireType from '../image/FireType.png'\r\nimport FlyingType from '../image/FlyingType.png'\r\nimport GhostType from '../image/GhostType.png'\r\nimport GrassType from '../image/GrassType.png'\r\nimport GroundType from '../image/GroundType.png'\r\nimport IceType from '../image/IceType.png'\r\nimport NormalType from '../image/NormalType.png'\r\nimport PoisonType from '../image/PoisonType.png'\r\nimport PsychicType from '../image/PsychicType.png'\r\nimport RockType from '../image/RockType.png'\r\nimport SteelType from '../image/SteelType.png'\r\nimport WaterType from '../image/WaterType.png'\r\n\r\nconst icons = {\r\n  bug: BugType,\r\n  dark: DarkType,\r\n  dragon: DragonType,\r\n  electric: ElectricType,\r\n  fairy: FairyType,\r\n  fighting: FightingType,\r\n  fire: FireType,\r\n  flying: FlyingType,\r\n  ghost: GhostType,\r\n  grass: GrassType,\r\n  ground: GroundType,\r\n  ice: IceType,\r\n  normal: NormalType,\r\n  poison: PoisonType,\r\n  psychic: PsychicType,\r\n  rock: RockType,\r\n  steel: SteelType,\r\n  water: WaterType,\r\n}\r\n\r\nconst Button = (props) => {\r\n  \r\n  const [namePokemon, setData] = useState()\r\n  const [imagePokemon, setImagePokemon] = useState()\r\n  const [idPokemon, setIdPokemon] = useState()\r\n  const [heightPokemon, setHeightPokemon] = useState()\r\n  const [weightPokemon, setWeightPokemon] = useState()\r\n  const [backImagePokemon, setBackImagePokemon] = useState()\r\n  const [statHp, setStatHp] = useState()\r\n  const [attack, setAttack] = useState()\r\n  const [defense, setDefence] = useState()\r\n  const [speed, setSpeed] = useState()\r\n  const [type, setType] = useState()\r\n\r\n  const baseUrl = \"https://pokeapi.co/api/v2/pokemon/\";\r\n  const baseImgUrl =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\";\r\n\r\n  const ClickButtonHandler = (props) => {\r\n\r\n    const randomСharacterId = Math.floor(Math.random() * 895);\r\n    \r\n    fetch((baseImgUrl, baseUrl) + randomСharacterId)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      setIdPokemon(data.id)\r\n      setData(data.name)\r\n      setImagePokemon(data.sprites.other[\"official-artwork\"].front_default)\r\n      setHeightPokemon(data.height)\r\n      setWeightPokemon(data.weight)\r\n      setBackImagePokemon(data.sprites.front_default)\r\n      setStatHp(data.stats[0].base_stat)\r\n      setAttack(data.stats[1].base_stat)\r\n      setDefence(data.stats[2].base_stat)\r\n      setSpeed(data.stats[5].base_stat)\r\n      setType(data.types[0].type.name)\r\n\r\n      let altDataName = data.types[0].type.name\r\n      const searchIcon = Object && Object.entries(icons).filter(icon => icon[0] === altDataName);\r\n      const imgg = document.querySelector(\".typePokemonImg\").src = searchIcon[0][1]  \r\n\r\n    })\r\n   \r\n  }\r\n\r\n  return <div className='card__area'>\r\n    <Card idPokemon={idPokemon}\r\n      namePokemon={namePokemon}\r\n      imagePokemon={imagePokemon}\r\n      backImagePokemon={backImagePokemon}\r\n      heightPokemon={heightPokemon}\r\n      weightPokemon={weightPokemon}\r\n      statHp={statHp}\r\n      attack={attack}\r\n      defense={defense}\r\n      speed={speed}\r\n      type={type}/>\r\n      <button className=\"pokemonRenderButton\" onClick={ClickButtonHandler}>Find Out!</button>\r\n    </div>\r\n}\r\n\r\nexport default Button","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Card.js",["31","32"],[],"import TypeIcons from \"./Icons\";\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {  \r\n\r\n  const clickCardHandler = () => {\r\n    const card = document.querySelector(\".card__front\");\r\n    card.classList.toggle('is-flipped');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\t\t  <div onClick={clickCardHandler} className=\"card__front\">\r\n\t\t\t  <div className=\"card__face card__face-front\">\r\n          <img id={props.idPokemon} className=\"card__face-front-image\" src={props.imagePokemon}></img>\r\n\t\t\t\t  <h2 id={props.idPokemon} className=\"card__face-front-name\">{props.namePokemon}</h2>\r\n\t\t\t</div>\r\n\r\n      <div className=\"card__face card__face-back\">\r\n\t\t\t\t<div className=\"card__face-back-content\" style={{backgroundColor: `var(--bg-poke-color-dark-${props.type})`}}>\r\n\t\t\t\t\t<div className=\"card__face-back-image-area\">\r\n            <div className=\"card__face-back-header-stats\">\r\n            <TypeIcons typePokemon={props.type} src={props.imgg}/>\r\n              <ul>\r\n                  <li>Height: {props.heightPokemon}</li>\r\n                  <li>Weight: {props.weightPokemon}</li>\r\n              </ul>\r\n            </div>\r\n              <img className=\"card__face-back-image\" src={props.backImagePokemon}></img>\r\n\t\t\t\t\t\t  <h2 id={props.idPokemon} className=\"card__face-back-name\">{props.namePokemon}</h2>\r\n\r\n              <div className=\"card__back-stats\">\r\n\t\t\t\t\t\t    <h3>Stats:</h3>\r\n             {/*    <div id=\"progressbar\">\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">HP</span>\r\n                    <span className=\"progressbar__stats-value\">{props.statHp}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.statHp} max=\"100\"></progress>\r\n                  <br/>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Attack</span>\r\n                    <span className=\"progressbar__stats-value\">{props.attack}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.attack} max=\"100\"></progress>\r\n                  <br/>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Defense</span>\r\n                    <span className=\"progressbar__stats-value\">{props.defense}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.defense} max=\"100\"></progress>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Speed</span>\r\n                    <span className=\"progressbar__stats-value\">{props.speed}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.speed} max=\"100\"></progress>\r\n                  <br/>  \r\n                  <br/>                  \r\n                </div> */}\r\n\r\n                <div className=\"stats__content\">\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">HP</span>\r\n                    <span className=\"otherStatContentValue\">{props.statHp}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.statHp} max=\"100\" style={{width: `${props.statHp}%`, backgroundColor: 'rgb(252, 107, 110)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Attack</span>\r\n                    <span className=\"otherStatContentValue\">{props.attack}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.attack} max=\"100\" style={{width: `${props.attack}%`, backgroundColor: 'rgb(33, 150, 243)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Defence</span>\r\n                    <span className=\"otherStatContentValue\">{props.defense}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.defense} max=\"100\" style={{width: `${props.defense}%`, backgroundColor: 'rgb(9, 75, 232)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Speed</span>\r\n                    <span className=\"otherStatContentValue\">{props.speed}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.speed} max=\"100\" style={{width: `${props.speed}%`, backgroundColor: 'rgb(207, 155, 72)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              </div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t  </div>\r\n        </div>\r\n      \r\n  )\r\n    \r\n}\r\n\r\nexport default Card","C:\\Users\\frezo\\Documents\\GitHub\\PokeCard\\src\\components\\UI\\Icons.js",["33"],[],"/* import { createElement } from 'react' */\r\n/* import BugType from '../Types/BugType.png'\r\nimport DarkType from '../Types/DarkType.png'\r\nimport DragonType from '../Types/DragonType.png'\r\nimport ElectricType from '../Types/ElectricType.png'\r\nimport FairyType from '../Types/FairyType.png'\r\nimport FightingType from '../Types/FightingType.png'\r\nimport FireType from '../Types/FireType.png'\r\nimport FlyingType from '../Types/FlyingType.png'\r\nimport GhostType from '../Types/GhostType.png'\r\nimport GrassType from '../Types/GrassType.png'\r\nimport GroundType from '../Types/GroundType.png'\r\nimport IceType from '../Types/IceType.png'\r\nimport NormalType from '../Types/NormalType.png'\r\nimport PoisonType from '../Types/PoisonType.png'\r\nimport PsychicType from '../Types/PsychicType.png'\r\nimport RockType from '../Types/RockType.png'\r\nimport SteelType from '../Types/SteelType.png'\r\nimport WaterType from '../Types/WaterType.png' */\r\n\r\n/* const icons = {\r\n    bug: BugType,\r\n    dark: DarkType,\r\n    dragon: DragonType,\r\n    electric: ElectricType,\r\n    fairy: FairyType,\r\n    fighting: FightingType,\r\n    fire: FireType,\r\n    flying: FlyingType,\r\n    ghost: GhostType,\r\n    grass: GrassType,\r\n    ground: GroundType,\r\n    ice: IceType,\r\n    normal: NormalType,\r\n    poison: PoisonType,\r\n    psychic: PsychicType,\r\n    rock: RockType,\r\n    steel: SteelType,\r\n    water: WaterType,\r\n} */\r\n\r\nconst typeIco = (props) => {\r\n    \r\n   /*  const searchAlt = document && document.querySelector('.typePokemonImg').alt\r\n    console.log(searchAlt, 1);\r\n    const searchIcon = Object.entries(icons).filter(icon => icon[0] === searchAlt);\r\n    const imgg = document.querySelector(\".typePokemonImg\").src = searchIcon[0][1]  \r\n    console.log('iconsss'); */\r\n}\r\n\r\nconst TypeIcons = (props) => {\r\n    return (\r\n       <div>\r\n            <img className='typePokemonImg' src='' alt={props.typePokemon}></img>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default TypeIcons",{"ruleId":"34","severity":1,"message":"35","line":84,"column":13,"nodeType":"36","messageId":"37","endLine":84,"endColumn":17},{"ruleId":"38","severity":1,"message":"39","line":16,"column":11,"nodeType":"40","endLine":16,"endColumn":97},{"ruleId":"38","severity":1,"message":"39","line":30,"column":15,"nodeType":"40","endLine":30,"endColumn":83},{"ruleId":"34","severity":1,"message":"41","line":42,"column":7,"nodeType":"36","messageId":"37","endLine":42,"endColumn":14},"no-unused-vars","'imgg' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'typeIco' is assigned a value but never used."]