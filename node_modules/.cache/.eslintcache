[{"C:\\Users\\frezo\\PokeCard\\src\\index.js":"1","C:\\Users\\frezo\\PokeCard\\src\\App.js":"2","C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Button.js":"3","C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Card.js":"4","C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Icons.js":"5"},{"size":154,"mtime":1675700259530,"results":"6","hashOfConfig":"7"},{"size":393,"mtime":1675758300573,"results":"8","hashOfConfig":"7"},{"size":3629,"mtime":1676478550625,"results":"9","hashOfConfig":"7"},{"size":5526,"mtime":1675700259523,"results":"10","hashOfConfig":"7"},{"size":1936,"mtime":1675700259523,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1a8l4ku",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"15"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"15"},"C:\\Users\\frezo\\PokeCard\\src\\index.js",[],[],[],"C:\\Users\\frezo\\PokeCard\\src\\App.js",[],[],"C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Button.js",[],[],"C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Card.js",["30","31"],[],"import TypeIcons from \"./Icons\";\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {  \r\n\r\n  const clickCardHandler = () => {\r\n    const card = document.querySelector(\".card__front\");\r\n    card.classList.toggle('is-flipped');\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"card\">\r\n\t\t  <div onClick={clickCardHandler} className=\"card__front\">\r\n\t\t\t  <div className=\"card__face card__face-front\">\r\n          <img id={props.idPokemon} className=\"card__face-front-image\" src={props.imagePokemon}></img>\r\n\t\t\t\t  <h2 id={props.idPokemon} className=\"card__face-front-name\">{props.namePokemon}</h2>\r\n\t\t\t</div>\r\n\r\n      <div className=\"card__face card__face-back\">\r\n\t\t\t\t<div className=\"card__face-back-content\" style={{backgroundColor: `var(--bg-poke-color-dark-${props.type})`}}>\r\n\t\t\t\t\t<div className=\"card__face-back-image-area\">\r\n            <div className=\"card__face-back-header-stats\">\r\n            <TypeIcons typePokemon={props.type} src={props.imgg}/>\r\n              <ul>\r\n                  <li>Height: {props.heightPokemon}</li>\r\n                  <li>Weight: {props.weightPokemon}</li>\r\n              </ul>\r\n            </div>\r\n              <img className=\"card__face-back-image\" src={props.backImagePokemon}></img>\r\n\t\t\t\t\t\t  <h2 id={props.idPokemon} className=\"card__face-back-name\">{props.namePokemon}</h2>\r\n\r\n              <div className=\"card__back-stats\">\r\n\t\t\t\t\t\t    <h3>Stats:</h3>\r\n             {/*    <div id=\"progressbar\">\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">HP</span>\r\n                    <span className=\"progressbar__stats-value\">{props.statHp}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.statHp} max=\"100\"></progress>\r\n                  <br/>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Attack</span>\r\n                    <span className=\"progressbar__stats-value\">{props.attack}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.attack} max=\"100\"></progress>\r\n                  <br/>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Defense</span>\r\n                    <span className=\"progressbar__stats-value\">{props.defense}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.defense} max=\"100\"></progress>\r\n\r\n                  <div className=\"progressbar__stats-content\">\r\n                    <span className=\"progressbar__stats-name\">Speed</span>\r\n                    <span className=\"progressbar__stats-value\">{props.speed}</span>\r\n                  </div>\r\n                  <progress className=\"card__back-stats\" value={props.speed} max=\"100\"></progress>\r\n                  <br/>  \r\n                  <br/>                  \r\n                </div> */}\r\n\r\n                <div className=\"stats__content\">\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">HP</span>\r\n                    <span className=\"otherStatContentValue\">{props.statHp}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.statHp} max=\"100\" style={{width: `${props.statHp}%`, backgroundColor: 'rgb(252, 107, 110)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Attack</span>\r\n                    <span className=\"otherStatContentValue\">{props.attack}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.attack} max=\"100\" style={{width: `${props.attack}%`, backgroundColor: 'rgb(33, 150, 243)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Defence</span>\r\n                    <span className=\"otherStatContentValue\">{props.defense}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.defense} max=\"100\" style={{width: `${props.defense}%`, backgroundColor: 'rgb(9, 75, 232)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"content__other-stat\">\r\n                    <span className=\"otherStatContentPower\">Speed</span>\r\n                    <span className=\"otherStatContentValue\">{props.speed}</span>\r\n                  </div>\r\n                  <div className=\"otherStatTimeLine\">\r\n                    <div className=\"otherStatTimeLineStat\" value={props.speed} max=\"100\" style={{width: `${props.speed}%`, backgroundColor: 'rgb(207, 155, 72)', height: '100%'}}></div>\r\n                    <div className=\"otherStatTimeLineStat\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              </div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t  </div>\r\n        </div>\r\n      \r\n  )\r\n    \r\n}\r\n\r\nexport default Card","C:\\Users\\frezo\\PokeCard\\src\\components\\UI\\Icons.js",["32"],[],"/* import { createElement } from 'react' */\r\n/* import BugType from '../Types/BugType.png'\r\nimport DarkType from '../Types/DarkType.png'\r\nimport DragonType from '../Types/DragonType.png'\r\nimport ElectricType from '../Types/ElectricType.png'\r\nimport FairyType from '../Types/FairyType.png'\r\nimport FightingType from '../Types/FightingType.png'\r\nimport FireType from '../Types/FireType.png'\r\nimport FlyingType from '../Types/FlyingType.png'\r\nimport GhostType from '../Types/GhostType.png'\r\nimport GrassType from '../Types/GrassType.png'\r\nimport GroundType from '../Types/GroundType.png'\r\nimport IceType from '../Types/IceType.png'\r\nimport NormalType from '../Types/NormalType.png'\r\nimport PoisonType from '../Types/PoisonType.png'\r\nimport PsychicType from '../Types/PsychicType.png'\r\nimport RockType from '../Types/RockType.png'\r\nimport SteelType from '../Types/SteelType.png'\r\nimport WaterType from '../Types/WaterType.png' */\r\n\r\n/* const icons = {\r\n    bug: BugType,\r\n    dark: DarkType,\r\n    dragon: DragonType,\r\n    electric: ElectricType,\r\n    fairy: FairyType,\r\n    fighting: FightingType,\r\n    fire: FireType,\r\n    flying: FlyingType,\r\n    ghost: GhostType,\r\n    grass: GrassType,\r\n    ground: GroundType,\r\n    ice: IceType,\r\n    normal: NormalType,\r\n    poison: PoisonType,\r\n    psychic: PsychicType,\r\n    rock: RockType,\r\n    steel: SteelType,\r\n    water: WaterType,\r\n} */\r\n\r\nconst typeIco = (props) => {\r\n    \r\n   /*  const searchAlt = document && document.querySelector('.typePokemonImg').alt\r\n    console.log(searchAlt, 1);\r\n    const searchIcon = Object.entries(icons).filter(icon => icon[0] === searchAlt);\r\n    const imgg = document.querySelector(\".typePokemonImg\").src = searchIcon[0][1]  \r\n    console.log('iconsss'); */\r\n}\r\n\r\nconst TypeIcons = (props) => {\r\n    return (\r\n       <div>\r\n            <img className='typePokemonImg' src='' alt={props.typePokemon}></img>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default TypeIcons",{"ruleId":"33","severity":1,"message":"34","line":16,"column":11,"nodeType":"35","endLine":16,"endColumn":97},{"ruleId":"33","severity":1,"message":"34","line":30,"column":15,"nodeType":"35","endLine":30,"endColumn":83},{"ruleId":"36","severity":1,"message":"37","line":42,"column":7,"nodeType":"38","messageId":"39","endLine":42,"endColumn":14},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'typeIco' is assigned a value but never used.","Identifier","unusedVar"]